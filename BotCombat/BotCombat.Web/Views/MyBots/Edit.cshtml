@model EditBotViewModel

@{
    ViewData["Title"] = "Edit";
}
<h4>@Model.Name @Model.Version</h4>
<small>Created: @Model.Created Status: @Model.Status</small>
<hr />

<form asp-action="Edit">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="Name" />
    <input type="hidden" asp-for="Version" />
    <input type="hidden" asp-for="Created" />
    <div class="form-group">
        <textarea asp-for="Code" class="form-control"></textarea>
        <span asp-validation-for="Code" class="text-danger"></span>
    </div>
    <div class="form-group form-check">
        <input asp-for="Run" class="form-check-input" />
        <label asp-for="Run" class="form-check-label"></label>
        <span asp-validation-for="Run" class="text-danger"></span>
    </div>
    <div class="form-group form-check">
        <input asp-for="ContinueEdit" class="form-check-input" />
        <label asp-for="ContinueEdit" class="form-check-label"></label>
        <span asp-validation-for="ContinueEdit" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Status"></label>
        <select class="form-control" asp-for="Status" asp-items="@Model.Statuses"></select>
    </div>
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-success" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<hr />
@if (!string.IsNullOrEmpty(Model.Game))
{
    await Html.RenderPartialAsync("_GamePartial", Model.Game);
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="/lib/codemirror-5.50.0/lib/codemirror.js"></script>
    <link rel="stylesheet" href="/lib/codemirror-5.50.0/lib/codemirror.css">
    <script src="/lib/codemirror-5.50.0/mode/javascript/javascript.js"></script>
    <script>
        var textarea = document.getElementById('Code');
        var myCodeMirror = CodeMirror.fromTextArea(textarea, {
                lineNumbers: true,
                lineWrapping: true,
                mode: {name: "javascript", globalVars: true}
        });
    </script>
}
